// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext {
    kotlinVersion = '1.3.72'
    gradlePluginVersion = '3.6.3'
  }

  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:$gradlePluginVersion"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

allprojects {
  repositories {
    google()
    jcenter()
  }

  // This block encapsulates custom properties and makes them available to all
  // modules in the project.
  ext {
    compileSdkVersion = 29
    buildToolsVersion = "29.0.2"
    minSdkVersion = 21
    targetSdkVersion = 29

    // UI
    appCompatVersion = '1.1.0'
    constraintLayoutVersion = '1.1.3'
    androidCoreKtxVersion = '1.2.0'
    androidXLegacySupportVersion = '1.0.0'
    lifecycleExtensionsVersion = '2.2.0'
    materialVersion = '1.1.0'
    databindingCompilerVersion = '3.1.4'

    // Dagger
    // https://github.com/google/dagger
    daggerVersion = '2.27'

    // Navigation
    // https://developer.android.com/jetpack/androidx/releases/navigation
    navigationVersion = '2.2.2'

    // LeakCanary
    // https://square.github.io/leakcanary/
    leakCanaryVersion = '2.2'

    // Testing
    jUnitExtVersion = '1.1.2-alpha05'
    jUnitExtKtxVersion = '1.1.1'
    androidXTestCoreVersion = '1.3.0-alpha05'
    androidXTestCoreKtxVersion = '1.2.0'
    androidXTestRunnerVersion = '1.2.0'
    androidXTestRulesVersion = '1.2.0'
    espressoCoreVersion = '3.3.0-alpha05'
    robolectricVersion = '4.3.1'
    fragmentTestVersion = '1.2.4'
  }

}

// https://github.com/google/dagger
// If you're using the Android Databinding library, you may want to increase the number of errors
// that javac will print. When Dagger prints an error, databinding compilation will halt and
// sometimes print more than 100 errors, which is the default amount for javac. For more
// information, see Issue 306.
gradle.projectsEvaluated {
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
